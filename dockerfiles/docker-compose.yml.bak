version: '3.8'

services:

  etcd:
    image: quay.io/coreos/etcd:v3.5.6
    networks:
      - internal
    command: ["/usr/local/bin/etcd", "--addr=127.0.0.1:4001", "--bind-addr=0.0.0.0:4001", "--data-dir=/var/etcd/data"]

  kube-apiserver:
    image: k8s.gcr.io/kube-apiserver:v1.25.7
    networks:
      - internal
    pid: host
    privileged: true
    volumes:
      - /sys:/sys:ro
      - /dev:/dev
      - /var/lib/docker/:/var/lib/docker:ro
      - /var/lib/kubelet/:/var/lib/kubelet:rw
      - /var/run:/var/run:rw
    command: ["kube-apiserver", "--address=0.0.0.0", "--etcd-servers=http://etcd:4001", "--service-cluster-ip-range=10.0.0.0/24", "--cluster-dns=10.0.0.10", "--cluster-domain=cluster.local"]
    depends_on:
      - etcd

  kube-controller-manager:
    image: k8s.gcr.io/kube-controller-manager:v1.25.7
    networks:
      - internal
    pid: host
    privileged: true
    command: ["kube-controller-manager", "--master=http://kube-apiserver:8080", "--cluster-name=kubernetes", "--cluster-cidr=10.0.0.0/24"]
    depends_on:
      - kube-apiserver

  kube-scheduler:
    image: k8s.gcr.io/kube-scheduler:v1.25.7
    networks:
      - internal
    pid: host
    privileged: true
    command: ["kube-scheduler", "--master=http://kube-apiserver:8080"]
    depends_on:
      - kube-apiserver

  kube-proxy:
    image: k8s.gcr.io/kube-proxy:v1.25.7
    networks:
      - internal
    pid: host
    privileged: true
    command: ["kube-proxy", "--master=http://kube-apiserver:8080", "--v=2"]
    depends_on:
      - kube-apiserver

  coredns:
    image: k8s.gcr.io/coredns/coredns:v1.9.3
    networks:
      - internal
    command: ["/coredns", "-conf", "/etc/coredns/Corefile"]
    volumes:
      - ./Corefile:/etc/coredns/Corefile
    depends_on:
      - kube-apiserver

networks:
  internal:
    driver: bridge
